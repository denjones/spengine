
//listing of all techniques and passes with embedded asm listings 

technique T0
{
    pass P0
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            // Parameters:
            //
            //   sampler2D tex;
            //   float transitionPosition;
            //
            //
            // Registers:
            //
            //   Name               Reg   Size
            //   ------------------ ----- ----
            //   transitionPosition c2       1
            //   tex                s0       1
            //
            
                ps_2_0
                def c0, 1, 0.589999974, 0.300000012, 0.109999999
                def c1, 8, -1, 0, 0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mov r1.w, c0.x
                add r1.x, r1.w, -c2.x
                mad r1.x, r1.x, c1.x, c1.y
                mul r1.y, r0.y, c0.y
                mad r1.y, r0.x, c0.z, r1.y
                mad r1.y, r0.z, c0.w, r1.y
                lrp r2.w, r1.y, c0.x, r1.x
                mul r1.x, r1.y, r2.w
                mul r0, r0, r1.x
                mov oC0, r0
            
            // approximately 11 instruction slots used (1 texture, 10 arithmetic)
            };
    }
}

