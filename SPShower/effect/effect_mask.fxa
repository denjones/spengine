
//listing of all techniques and passes with embedded asm listings 

technique T0
{
    pass P0
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            // Parameters:
            //
            //   sampler2D effectTex;
            //   float level;
            //   sampler2D tex;
            //   float transitionPosition;
            //
            //
            // Registers:
            //
            //   Name               Reg   Size
            //   ------------------ ----- ----
            //   transitionPosition c2       1
            //   level              c3       1
            //   tex                s0       1
            //   effectTex          s1       1
            //
            
                ps_2_0
                def c0, 0.0500000007, 0.5, 1, 2
                def c1, 0, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                dcl_2d s1
                texld r0, t0, s1
                texld r1, t0, s0
                add r0.x, r0.x, c0.z
                mov r2.xy, c0
                mad r0.y, c3.x, -r2.x, r2.y
                add r0.x, -r0.y, r0.x
                mad r0.z, r0.y, -c0.w, c0.w
                mad r0.x, c2.x, -r0.z, r0.x
                add r0.z, -r0.y, r0.x
                mad r0.w, r0.y, -c0.w, c0.z
                rcp r0.w, r0.w
                mul r0.z, r0.w, r0.z
                add r0.w, -r0.x, r0.y
                add r0.y, -r0.y, c0.z
                add r0.x, -r0.x, r0.y
                cmp r0.y, r0.w, c1.x, r0.z
                cmp r0.x, r0.x, r0.y, c0.z
                mul r0, r0.x, r1
                mov oC0, r0
            
            // approximately 19 instruction slots used (2 texture, 17 arithmetic)
            };
    }
}

