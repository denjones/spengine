
//listing of all techniques and passes with embedded asm listings 

technique T0
{
    pass P0
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            // Parameters:
            //
            //   float height;
            //   sampler2D tex;
            //   float transitionPosition;
            //   float width;
            //
            //
            // Registers:
            //
            //   Name               Reg   Size
            //   ------------------ ----- ----
            //   width              c0       1
            //   height             c1       1
            //   transitionPosition c2       1
            //   tex                s0       1
            //
            
                ps_2_0
                def c3, 100, 0, 1, 50
                dcl t0.xy
                dcl_2d s0
                mul r0.w, t0.x, c0.x
                mov r1.xw, c3
                mul r0.x, r1.x, c2.x
                rcp r0.y, r0.x
                mul r0.z, r0.y, r0.w
                frc r0.w, r0.z
                cmp r1.x, -r0.w, c3.y, c3.z
                add r0.w, r0.z, -r0.w
                cmp r0.z, r0.z, c3.y, r1.x
                add r0.z, r0.z, r0.w
                mul r1.x, r0.x, r0.z
                mul r0.z, t0.y, c1.x
                mul r0.y, r0.y, r0.z
                frc r0.z, r0.y
                cmp r0.w, -r0.z, c3.y, c3.z
                add r0.z, r0.y, -r0.z
                cmp r0.y, r0.y, c3.y, r0.w
                add r0.y, r0.y, r0.z
                mul r1.y, r0.x, r0.y
                mad r0.xy, c2.x, r1.w, r1
                rcp r0.z, c0.x
                mul r1.x, r0.z, r0.x
                rcp r0.x, c1.x
                mul r1.y, r0.x, r0.y
                texld r0, r1, s0
                mov oC0, r0
            
            // approximately 26 instruction slots used (1 texture, 25 arithmetic)
            };
    }
}

