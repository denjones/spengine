
//listing of all techniques and passes with embedded asm listings 

technique T0
{
    pass P0
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            // Parameters:
            //
            //   float height;
            //   sampler2D tex;
            //   float transitionPosition;
            //   float width;
            //
            //
            // Registers:
            //
            //   Name               Reg   Size
            //   ------------------ ----- ----
            //   width              c0       1
            //   height             c1       1
            //   transitionPosition c2       1
            //   tex                s0       1
            //
            
                ps_2_0
                def c3, -1, 0.111111112, 1, 0
                dcl t0.xy
                dcl_2d s0
                texld r0, t0, s0
                mov r1.xz, c3
                mad r1.y, t0.x, c0.x, r1.x
                rcp r1.w, c0.x
                mul r2.z, r1.w, r1.y
                mad r1.x, t0.y, c1.x, r1.x
                rcp r1.y, c1.x
                mul r2.w, r1.y, r1.x
                mov r3.x, r2.z
                mov r3.y, r2.w
                mul r1.x, t0.x, c0.x
                mul r2.y, r1.w, r1.x
                mov r4.x, r2.y
                mov r4.y, r2.w
                mov r5.z, r2.y
                mad r5.w, t0.x, c0.x, r1.z
                mul r2.x, r1.w, r5.w
                mov r2.y, r2.w
                mov r6.x, r2.x
                mul r5.w, t0.y, c1.x
                mul r5.y, r1.y, r5.w
                mov r7.x, r5.z
                mov r7.y, r5.y
                mov r6.y, r7.y
                mov r8.x, r6.x
                mad r1.x, t0.y, c1.x, r1.z
                mul r5.x, r1.y, r1.x
                mov r1.xy, r5.zxyw
                mov r8.y, r5.x
                texld r3, r3, s0
                texld r4, r4, s0
                texld r2, r2, s0
                texld r5, r6, s0
                texld r6, r7, s0
                texld r7, r8, s0
                texld r1, r1, s0
                mul r8, r4, c3.y
                mad r3, r3, c3.y, r8
                mad r3, r2, c3.y, r3
                mad r3, r4, c3.y, r3
                mad r3, r6, c3.y, r3
                mad r3, r5, c3.y, r3
                mad r2, r2, c3.y, r3
                mad r1, r1, c3.y, r2
                mad r1, r7, c3.y, r1
                lrp r2, c2.x, r1, r0
                mov oC0, r2
            
            // approximately 47 instruction slots used (8 texture, 39 arithmetic)
            };
    }
}

