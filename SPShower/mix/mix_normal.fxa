
//listing of all techniques and passes with embedded asm listings 

technique T0
{
    pass P0
    {
        //No embedded vertex shader
        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
            //
            // Parameters:
            //
            //   sampler2D targetTex;
            //   sampler2D tex;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   tex          s0       1
            //   targetTex    s1       1
            //
            
                ps_2_0
                def c0, 1, 0, 0, 0
                dcl t0.xy
                dcl_2d s0
                dcl_2d s1
                texld r0, t0, s1
                texld r1, t0, s0
                add r2.w, -r0.w, c0.x
                mul r0.x, r0.x, r2.w
                mad r0.x, r1.w, r1.x, r0.x
                max r2.x, r0.w, r1.w
                rcp r1.x, r2.x
                mul r3.x, r0.x, r1.x
                mul r0.x, r0.y, r2.w
                mul r0.y, r0.z, r2.w
                add r0.z, r0.w, r1.w
                min r3.w, r0.z, c0.x
                mad r0.y, r1.w, r1.z, r0.y
                mad r0.x, r1.w, r1.y, r0.x
                mul r3.yz, r1.x, r0.zxyw
                mov oC0, r3
            
            // approximately 16 instruction slots used (2 texture, 14 arithmetic)
            };
    }
}

